LFE, Lisp Flavoured Erlang, is a lisp syntax front-end to the Erlang
compiler. Code produced with it is compatible with "normal" Erlang
code. An LFE evaluator and shell is also included.

v0.4
----
Parameterized modules.

Added (export all) attribute to module definition.

New records which allow giving default values as in vanilla
Erlang. Records are still compatible with vanilla Erlang but now more
pratical to use. NOTE this change is not backwards compatible as
syntax for (make- ...) and (match- ...) have changed. Also added
general multiple (set- ...) macro.

(eval-when-compile ...) added as a top-level form which allows
functions to be defined when compiling the forms. These are useful for
more complex macros.

Better and more documention. The documentation is still normal text
files as Edoc and I are not in agreement on how things should work.

v0.3
----
This is the first version with the modified internal core forms and
macro intefaces for the new CL inspired style and the older Scheme
inspired style.

Two new modules have been added:

lfe_boot allows you start Erlang with the LFE shell running and still
have ^G enabled and user_drv running. Use it as follows:

erl -noshell -noinput -s lfe_boot start

NOTE order of commands important, must be -noshell -noinput! Add -pa
to find modules if necessary.

lfe_gen is a trial interface for using LFE for dynamic code
generation. LFE is much easier to generate as an Erkang list than
Erlang forms. This module helps defining and compiling a module. Note,
that while it works, this module is very experimental and may change.
